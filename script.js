const symbols = ['üçí', 'üçã', 'üçä', 'üçâ', 'üçá', 'üçÄ'];
const spinButton = document.getElementById('spinButton');
const loanButton = document.getElementById('loanButton');
const repayButton = document.getElementById('repayButton');
const resultDisplay = document.getElementById('result');
const balanceDisplay = document.getElementById('balance');
const debtDisplay = document.getElementById('debt');

let balance = 5000; // –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
let debt = 0; // –ù–∞—á–∞–ª—å–Ω—ã–π –¥–æ–ª–≥

spinButton.addEventListener('click', () => {
    if (balance < 100) {
        resultDisplay.textContent = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è!";
        return;
    }

    balance -= 100; 
    updateBalance(); 

    const reels = [document.getElementById('reel1'), document.getElementById('reel2'), document.getElementById('reel3')];
    let delays = [0, 300, 600];

    reels.forEach((reel, index) => {
        setTimeout(() => {
            reel.classList.add('spin');

            const randomSymbol = Math.floor(Math.random() * symbols.length);
            setTimeout(() => {
                reel.textContent = symbols[randomSymbol];
                reel.classList.remove('spin');

                if (index === reels.length - 1) {
                    checkWin(reels);
                    // –û—á–∏—â–∞–µ–º —Å–ª–æ—Ç—ã —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                    setTimeout(() => {
                        reels.forEach(reel => {
                            reel.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–∏–º–≤–æ–ª—ã
                        });
                    }, 800); // 5000 –º—Å = 5 —Å–µ–∫—É–Ω–¥
                }
            }, 1200);
        }, delays[index]);
    });
});

loanButton.addEventListener('click', () => {
    debt += 1000; 
    balance += 1000; 
    updateBalance(); 
    updateDebt(); 
    resultDisplay.textContent = "–í—ã –≤–∑—è–ª–∏ –≤ –¥–æ–ª–≥ 1000!";
});

repayButton.addEventListener('click', () => {
    if (debt === 0) {
        resultDisplay.textContent = "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–ª–≥–∞!";
        return;
    }
    
    let repaymentAmount = Math.min(debt, 500); 
    balance -= repaymentAmount; 
    debt -= repaymentAmount; 
    updateBalance(); 
    updateDebt(); 
    resultDisplay.textContent = `–í—ã –≤–µ—Ä–Ω—É–ª–∏ ${repaymentAmount} –≤ –¥–æ–ª–≥.`;
});

function checkWin(reels) {
    const results = reels.map(reel => reel.textContent);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
    if (results[0] === results[1] && results[1] === results[2]) {
        resultDisplay.textContent = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!";
        balance += 100000; 
        launchConfetti();
    } else {
        resultDisplay.textContent = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!";
    }
    
    updateBalance(); 
}

function launchConfetti() {
    confetti({
        particleCount: 100,
        spread: 70,
        origin: { y: 0.6 } // –ü–æ–∑–∏—Ü–∏—è –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    });
}

function updateBalance() {
    balanceDisplay.textContent = `–ë–∞–ª–∞–Ω—Å: ${balance}`;
}

function updateDebt() {
    debtDisplay.textContent = `–î–æ–ª–≥: ${debt}`;
}
reels.forEach((reel, index) => {
    setTimeout(() => {
        reel.classList.add('spin');

        const randomSymbol = Math.floor(Math.random() * symbols.length);
        setTimeout(() => {
            reel.textContent = symbols[randomSymbol];
            reel.classList.remove('spin');

            if (index === reels.length - 1) {
                checkWin(reels);
                // –û—á–∏—â–∞–µ–º —Å–ª–æ—Ç—ã —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                setTimeout(() => {
                    reels.forEach(reel => {
                        reel.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–∏–º–≤–æ–ª—ã
                    });
                }, 5000);
            }
        }, 2000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –¥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ 2000 –º—Å
    }, delays[index]);
});
function updateBalance() {
    balanceDisplay.textContent = `–ë–∞–ª–∞–Ω—Å: ${balance}`;
    localStorage.setItem('balance', balance); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–ª–∞–Ω—Å –≤ localStorage
}
window.addEventListener('load', () => {
    const savedBalance = localStorage.getItem('balance');
    if (savedBalance) {
        balance = parseInt(savedBalance, 10); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å
    }
    updateBalance(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
});